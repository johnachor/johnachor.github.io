{
  "blogentries": [
    {
      "id": "blog01",
      "title": "First couple weeks back!",
      "date": "Week 1",
      "content":
        "It's good to be back in the saddle!  A crash course through the Treehouse material has me raring to go and feeling freshly smart -- even if I feel like I have to re-teach myself how CSS flex works every time I make a new page.  Looking forward to making a bunch of new friends and learning React instead of Angular this time around.  Here's to a new start!"
    },
    {
      "id": "blog02",
      "title": "Relearning Vanilla Javascript",
      "date": "Week 3",
      "content":
        "Now that prework is completely out of the way and we have study groups and Javascript in our toolkit, I'm feeling much more at home again.  I am honestly addicted to just making JS do things with data.  This time around I want to go out of my way to work in with my teammates and write code that they can understand and that fits in with the overall project, rather than expecting everyone to adopt my philosophies."
    },
    {
      "id": "blog03",
      "title": "Teamwork and Git",
      "date": "Week 4",
      "content":
        "New teams today!  I get to be team leader for the first time since I started at NSS.  I think my previous team did a fantastic job of managing our first project, and we had very little in the way of git incidents.  The theme of our team name made for some hilarious song titles on the discography page I got to create."
    },
    {
      "id": "blog04",
      "title": "ES6!",
      "date": "Week 6",
      "content":
        "At long last, I'm allowed to use ES6 again!  A teammate taught me how to use the spread operator on Saturday and I feel like that's a huge shortcut for several array methods.  Also, I independently discovered the element.insertAdjacentHTML() method that enables me to modify the contents of an element without corrupting the other elements inside it and wiping their event listeners.  This is huge for me because that's been a thorn in my side on several projects!"
    },
    {
      "id": "blog05",
      "title": "XHR",
      "date": "Week 7",
      "content": "This week we delved into using vanilla JS XMLHttpRequest() functionality to retrieve data from a server.  This feels like a big step in the direction of dynamic applications that can adapt to data not stored locally!  However, I am very curious and a little bit bothered by the way the name of that constructor capitalizes XML and not HTTP."
    },
    {
      "id": "blog06",
      "title": "Bootstrap",
      "date": "Week 8",
      "content": "Last week we started learning the Bootstrap CSS framework.  It's a huge step up from doing everything by hand, having simple common work already done for you and nice looking elements without having to write 30 lines of CSS to get them looking exactly right!  Hopefully the extra effort I've been putting into understanding CSS this time around will pay off, since I went out of my way to avoid it last time thinking I could just be the Data Guy.  I did some CSS work on my Solar System assignment that I was very proud of, and I would like to be able to present more apps that look and feel like apps instead of code exercises with minimal style going forward."
    },
    {
      "id": "blog07",
      "title": "Task runners and Browserify",
      "date": "Week 9",
      "content": "This week we began using Grunt to lint our code with ESLint and bundle it into a single file with Browserify.  This gives me a lot of flexibility that I felt like I was missing before, in being able to break out functions and variables into the appropriate modules to keep code organized as well as keep variables in memory without exposing them to the window scope.  I may veer off in my free time and try to learn about other bundlers such as webpack and see how they work, because I found during a project that one of the libraries I wanted to use required webpack and I had no idea what I was doing!"
    }, 
    {
      "id": "blog08",
      "title": "Task runners and Browserify - part 2",
      "date": "Week 10",
      "content": "Our assigned linting config file is giving me some interesting growing pains; it's taking a lot of getting used to always using single quotes for strings or using trailing commas in arrays or objects.  However, I think this is ultimately a good lesson because in the future when I'm working in a codebase with several other people it's likely I'll be held to certain standards and it's good to have the flexibility to be able to break out of my own patterns in order to work in with others."
    },
    {
      "id": "blog09",
      "title": "Group project #2 - Chatty",
      "date": "Week 11",
      "content": "Recently, we completed the second group project of this cohort, a single-page app called Chatty.  <a href='https: //github.com/nss-evening-cohort-7/chatty-coulrophobia'>Click here</a> to check it out.<br>I greatly enjoyed this project, and took it as an opportunity to work on my soft skills just as much as my coding chops.  I liked all of my teammates and everyone was very communicative and motivated, which was really encouraging.  We nailed all of the bonus objectives!  After the skeleton was done and I was looking for something to do without stepping on anyone's toes, I asked the group: 'What does no one want to do?' I ended up with the emoji feature, and I struggled for a couple days to find a library that would allow me to work emoji into the project. I ended up having to dig into the one I picked and use it in an unintended way, but it works!"
    },
    {
      "id": "blog10",
      "title": "jQuery",
      "date": "Week 12",
      "content": "This week we started diving into using jQuery methods themselves, though we've been including it in projects since we started using Bootstrap.  DOM traversal, JSON retrieval, and event listeners are <i>much</i> easier to work with in jQuery, as well as manipulating multiple elements at once with a simple CSS selector rather than iterating with a loop.  This is already making me want to go back and refactor old projects to make them ten times more readable, so I look forward to being able to write code that I can look back on later and go, 'I can see what that does...'"
    },
    {
      "id": "blog11",
      "title": "Promises",
      "date": "Week 12",
      "content": "This week we learned about ES6 promises, which gives me a much better way to work asynchronous operations into my usual pattern of writing functions that exist purely as an in-out data transformation.  I really like the way the chaining works, sending the results of each callback function to the next one.  That makes it really easy to visualize the flow of data through a promise chain, and Promise.race() and Promise.all() giving me the ability to delay execution until at least one, or all, of the promises resolve, is a super useful functionality that I'm not sure exists in jQuery alone."
    },
    {
      "id": "blog12",
      "title": "APIs",
      "date": "Week 15",
      "content": "This week we delved into our first attempts at accessing data that we didn't create and store locally.  Since this is likely going to be a crucial part of capstones, I'm excited to get into how they work so I can start shopping around for an API that might do what I need in order to get my idea working.  The good thing is that with a few tweaks, the promises basically work the same way as grabbing our own JSON files has, and it's just a question of knowing the structure of the data you're going to get so you can work it into your functions.  I feel like now is the time when I really need to keep my head in the game, because once we start learning frameworks, that's when we'll be doing the stuff that is in really high demand right now."
    },
    {
      "id": "blog13",
      "title": "Firebase",
      "date": "Week 16",
      "content": "This week we started working with Firebase, so we can store dynamic data remotely instead of just working with static data from project creation.  I think this is the beginning of us having the ability to create apps with user specific saved data that are interactive and personalized now that we have a 'back end' that we can interface with.  I look forward to trying out Firebase with some personal projects that I've got in the back of my mind as well as homework assignments.  It's fascinating to have a concept that you don't quite know how to realize slowly becoming a fleshed out idea that you have the tools to bring into being."
    }
  ]
}
